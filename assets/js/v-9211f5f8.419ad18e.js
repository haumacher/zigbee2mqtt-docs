"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[24101],{39424:(e,a,s)=>{s.r(a),s.d(a,{data:()=>n});const n={key:"v-9211f5f8",path:"/guide/usage/availability.html",title:"Availability",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Non-pingable devices",slug:"non-pingable-devices",children:[]},{level:2,title:"State retrieval",slug:"state-retrieval",children:[]},{level:2,title:"Note for CC2530/CC2531 users",slug:"note-for-cc2530-cc2531-users",children:[]}],filePathRelative:"guide/usage/availability.md"}},34825:(e,a,s)=>{s.r(a),s.d(a,{default:()=>p});var n=s(66252);const t=(0,n._)("h1",{id:"availability",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#availability","aria-hidden":"true"},"#"),(0,n.Uk)(" Availability")],-1),i=(0,n.Uk)("An ongoing discussion about this feature can be found here: "),l={href:"https://github.com/Koenkk/zigbee2mqtt/issues/775",target:"_blank",rel:"noopener noreferrer"},o=(0,n.Uk)("#775"),r=(0,n.uE)('<p>When the availability feature is enabled, Zigbee2MQTT will ping devices to check if they are online. In case a devices changes it&#39;s online/offline state, Zigbee2MQTT will publish to <code>zigbee2mqtt/[FRIENDLY_NAME]/availability</code>; <code>online</code> or <code>offline</code>.</p><p>This feature integrates well with Home Assistant as devices are marked as <code>unavailable</code> when offline.</p><p>To enable availability, add the following to your <code>configuration.yaml</code>:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">advanced</span><span class="token punctuation">:</span>\n  <span class="token key atrule">availability_timeout</span><span class="token punctuation">:</span> <span class="token number">60</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>The <code>availability_timeout</code> defines the interval in seconds at which devices are pinged. Note that only non-battery powered devices are checked for availability. By default <code>availability_timeout: 0</code> is set, which means that this feature is disabled.</p><p>In order to exclude devices from this feature use <code>availability_blocklist</code>, example:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">advanced</span><span class="token punctuation">:</span>\n  <span class="token key atrule">availability_timeout</span><span class="token punctuation">:</span> <span class="token number">60</span>\n  <span class="token key atrule">availability_blocklist</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;my_bulb&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;0x000b57fffec6a5b2&#39;</span><span class="token punctuation">]</span> <span class="token comment"># = list of friendly names or IEEE addresses</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>In order to set availability check for certain devices only from this feature use <code>availability_passlist</code>, example:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">advanced</span><span class="token punctuation">:</span>\n  <span class="token key atrule">availability_timeout</span><span class="token punctuation">:</span> <span class="token number">60</span>\n  <span class="token key atrule">availability_passlist</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;my_bulb&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;my_other_bulb&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;0x000b57fffec6a5b2&#39;</span><span class="token punctuation">]</span> <span class="token comment"># = list of friendly names or IEEE addresses</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="non-pingable-devices" tabindex="-1"><a class="header-anchor" href="#non-pingable-devices" aria-hidden="true">#</a> Non-pingable devices</h2><p>Note that not all devices can be pinged for availability (e.g. battery powered devices). This category of devices will be marked as <code>unavailable</code> when no message has been received from them for 25 hours (persistent across restarts) This is only enabled when the availability feature is enabled.</p><h2 id="state-retrieval" tabindex="-1"><a class="header-anchor" href="#state-retrieval" aria-hidden="true">#</a> State retrieval</h2><p>While this feature is enabled and a bulb reconnects or announces itself on the network, Zigbee2MQTT will retrieve the new state of the device. This will make sure that e.g. a bulb is powered off and on again the state (on/off, brightness, color temperature or color) is correct.</p><h2 id="note-for-cc2530-cc2531-users" tabindex="-1"><a class="header-anchor" href="#note-for-cc2530-cc2531-users" aria-hidden="true">#</a> Note for CC2530/CC2531 users</h2><p>As this feature increases the amount of messages on the Zigbee network, it could cause stability issues when you are using a CC2531 or CC2530 as adapter.</p>',15),c={},p=(0,s(83744).Z)(c,[["render",function(e,a){const s=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[t,(0,n._)("p",null,[(0,n._)("em",null,[i,(0,n._)("a",l,[o,(0,n.Wm)(s)])])]),r],64)}]])},83744:(e,a)=>{a.Z=(e,a)=>{for(const[s,n]of a)e[s]=n;return e}}}]);