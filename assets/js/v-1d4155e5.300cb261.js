"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[98137],{14463:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-1d4155e5",path:"/guide/configuration/",title:"Configuration",lang:"en-US",frontmatter:{sidebarDepth:1},excerpt:"",headers:[{level:3,title:"Specifying devices and groups in a separate file",slug:"specifying-devices-and-groups-in-a-separate-file",children:[]},{level:3,title:"Specifying MQTT user/password and network_key in a different file",slug:"specifying-mqtt-user-password-and-network-key-in-a-different-file",children:[]},{level:2,title:"Device specific configuration",slug:"device-specific-configuration",children:[{level:3,title:"All devices",slug:"all-devices",children:[]},{level:3,title:"Device type specific",slug:"device-type-specific",children:[]},{level:3,title:"External converters configuration",slug:"external-converters-configuration",children:[]},{level:3,title:"Example",slug:"example",children:[]}]},{level:2,title:"Different location",slug:"different-location",children:[]},{level:2,title:"Override via environment variables",slug:"override-via-environment-variables",children:[]}],filePathRelative:"guide/configuration/README.md"}},23725:(n,s,a)=>{a.r(s),a.d(s,{default:()=>P});var e=a(66252);const t=(0,e.uE)('<h1 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h1><p>The following configuration options are available in <code>data/configuration.yaml</code>.</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># Optional: Home Assistant integration (MQTT discovery) (default: false)</span>\n<span class="token key atrule">homeassistant</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n\n<span class="token comment"># Optional: allow new devices to join.</span>\n<span class="token comment"># WARNING: Disable this after all devices have been paired! (default: false)</span>\n<span class="token key atrule">permit_join</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n\n<span class="token comment"># Required: MQTT settings</span>\n<span class="token key atrule">mqtt</span><span class="token punctuation">:</span>\n  <span class="token comment"># Required: MQTT base topic for Zigbee2MQTT MQTT messages</span>\n  <span class="token key atrule">base_topic</span><span class="token punctuation">:</span> zigbee2mqtt\n  <span class="token comment"># Required: MQTT server URL (use mqtts:// for SSL/TLS connection)</span>\n  <span class="token key atrule">server</span><span class="token punctuation">:</span> <span class="token string">&#39;mqtt://localhost:1883&#39;</span>\n  <span class="token comment"># Optional: absolute path to SSL/TLS certificate of CA used to sign server and client certificates (default: nothing)</span>\n  <span class="token key atrule">ca</span><span class="token punctuation">:</span> <span class="token string">&#39;/etc/ssl/mqtt-ca.crt&#39;</span>\n  <span class="token comment"># Optional: absolute paths to SSL/TLS key and certificate for client-authentication (default: nothing)</span>\n  <span class="token key atrule">key</span><span class="token punctuation">:</span> <span class="token string">&#39;/etc/ssl/mqtt-client.key&#39;</span>\n  <span class="token key atrule">cert</span><span class="token punctuation">:</span> <span class="token string">&#39;/etc/ssl/mqtt-client.crt&#39;</span>\n  <span class="token comment"># Optional: MQTT server authentication user (default: nothing)</span>\n  <span class="token key atrule">user</span><span class="token punctuation">:</span> my_user\n  <span class="token comment"># Optional: MQTT server authentication password (default: nothing)</span>\n  <span class="token key atrule">password</span><span class="token punctuation">:</span> my_password\n  <span class="token comment"># Optional: MQTT client ID (default: nothing)</span>\n  <span class="token key atrule">client_id</span><span class="token punctuation">:</span> <span class="token string">&#39;MY_CLIENT_ID&#39;</span>\n  <span class="token comment"># Optional: disable self-signed SSL certificates (default: true)</span>\n  <span class="token key atrule">reject_unauthorized</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: Include device information to mqtt messages (default: false)</span>\n  <span class="token key atrule">include_device_information</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: MQTT keepalive in seconds (default: 60)</span>\n  <span class="token key atrule">keepalive</span><span class="token punctuation">:</span> <span class="token number">60</span>\n  <span class="token comment"># Optional: MQTT protocol version (default: 4), set this to 5 if you</span>\n  <span class="token comment"># use the &#39;retention&#39; device specific configuration</span>\n  <span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">4</span>\n  <span class="token comment"># Optional: Disable retain for all send messages. ONLY enable if you MQTT broker doesn&#39;t</span>\n  <span class="token comment"># support retained message (e.g. AWS IoT core, Azure IoT Hub, Google Cloud IoT core, IBM Watson IoT Platform).</span>\n  <span class="token comment"># Enabling will break the Home Assistant integration. (default: false)</span>\n  <span class="token key atrule">force_disable_retain</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n\n<span class="token comment"># Required: serial settings</span>\n<span class="token key atrule">serial</span><span class="token punctuation">:</span>\n  <span class="token comment"># Required: location of the adapter (e.g. CC2531).</span>\n  <span class="token comment"># To autodetect the port, set &#39;port: null&#39;.</span>\n  <span class="token key atrule">port</span><span class="token punctuation">:</span> /dev/ttyACM0\n  <span class="token comment"># Optional: disable LED of the adapter if supported (default: false)</span>\n  <span class="token key atrule">disable_led</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n  <span class="token comment"># Optional: adapter type, not needed unless you are experiencing problems (default: shown below, options: zstack, deconz)</span>\n  <span class="token key atrule">adapter</span><span class="token punctuation">:</span> <span class="token null important">null</span>\n\n<span class="token comment"># Optional: Block devices from the network (by ieeeAddr) (default: empty)</span>\n<span class="token comment"># Previously called `ban` (which is deprecated)</span>\n<span class="token key atrule">blocklist</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token string">&#39;0x000b57fffec6a5b2&#39;</span>\n\n<span class="token comment"># Optional: Allow only certain devices to join the network (by ieeeAddr)</span>\n<span class="token comment"># Note that all devices not on the passlist will be removed from the network!</span>\n<span class="token comment"># (default: empty)</span>\n<span class="token comment"># Previously called `whitelist` (which is deprecated)</span>\n<span class="token key atrule">passlist</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token string">&#39;0x000b57fffec6a5b3&#39;</span>\n\n<span class="token comment"># Optional: advanced settings</span>\n<span class="token key atrule">advanced</span><span class="token punctuation">:</span>\n  <span class="token comment"># Optional: ZigBee pan ID (default: shown below)</span>\n  <span class="token comment"># Setting pan_id: GENERATE will make Zigbee2MQTT generate a new panID on next startup</span>\n  <span class="token key atrule">pan_id</span><span class="token punctuation">:</span> <span class="token number">0x1a62</span>\n  <span class="token comment"># Optional: Zigbee extended pan ID (default: shown below)</span>\n  <span class="token key atrule">ext_pan_id</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">]</span>\n  <span class="token comment"># Optional: ZigBee channel, changing requires re-pairing of all devices. (Note: use a ZLL channel: 11, 15, 20, or 25 to avoid Problems)</span>\n  <span class="token comment"># (default: 11)</span>\n  <span class="token key atrule">channel</span><span class="token punctuation">:</span> <span class="token number">11</span>\n  <span class="token comment"># Optional: state caching, MQTT message payload will contain all attributes, not only changed ones.</span>\n  <span class="token comment"># Has to be true when integrating via Home Assistant (default: true)</span>\n  <span class="token key atrule">cache_state</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: persist cached state, only used when cache_state: true (default: true)</span>\n  <span class="token key atrule">cache_state_persistent</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: send cached state on startup, only used when cache_state_persistent: true (default: true)</span>\n  <span class="token key atrule">cache_state_send_on_startup</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: Logging level, options: debug, info, warn, error (default: info)</span>\n  <span class="token key atrule">log_level</span><span class="token punctuation">:</span> info\n  <span class="token comment"># Optional: Location of log directory (default: shown below)</span>\n  <span class="token key atrule">log_directory</span><span class="token punctuation">:</span> data/log/%TIMESTAMP%\n  <span class="token comment"># Optional: Log file name, can also contain timestamp, e.g.: zigbee2mqtt_%TIMESTAMP%.log (default: shown below)</span>\n  <span class="token key atrule">log_file</span><span class="token punctuation">:</span> log.txt\n  <span class="token comment"># Optional: Rotate log every 10MB around 3 files (default: true)</span>\n  <span class="token key atrule">log_rotation</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: Output location of the log (default: shown below), leave empty to supress logging (log_output: [])</span>\n  <span class="token comment"># possible options: &#39;console&#39;, &#39;file&#39;, &#39;syslog&#39;</span>\n  <span class="token key atrule">log_output</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> console\n    <span class="token punctuation">-</span> file\n  <span class="token comment"># Create a symlink called &quot;current&quot; in the log directory which points to the latests log directory. (default: false)</span>\n  <span class="token key atrule">log_symlink_current</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n  <span class="token comment"># Optional: syslog configuration, skip values or entirely to use defaults. Only use when &#39;syslog&#39; in &#39;log_output&#39; (see above)</span>\n  <span class="token key atrule">log_syslog</span><span class="token punctuation">:</span>\n    <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost <span class="token comment"># The host running syslogd, defaults to localhost.</span>\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">123</span> <span class="token comment"># The port on the host that syslog is running on, defaults to syslogd&#39;s default port.</span>\n    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> tcp4 <span class="token comment"># The network protocol to log over (e.g. tcp4, udp4, tls4, unix, unix-connect, etc).</span>\n    <span class="token key atrule">path</span><span class="token punctuation">:</span>  /dev/log <span class="token comment"># The path to the syslog dgram socket (i.e. /dev/log or /var/run/syslog for OS X).</span>\n    <span class="token key atrule">pid</span><span class="token punctuation">:</span> process.pid <span class="token comment"># PID of the process that log messages are coming from (Default process.pid).</span>\n    <span class="token key atrule">facility</span><span class="token punctuation">:</span> local0 <span class="token comment"># Syslog facility to use (Default: local0).</span>\n    <span class="token key atrule">localhost</span><span class="token punctuation">:</span> localhost <span class="token comment"># Host to indicate that log messages are coming from (Default: localhost).</span>\n    <span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token number">5424</span> <span class="token comment"># The type of the syslog protocol to use (Default: BSD, also valid: 5424).</span>\n    <span class="token key atrule">app_name</span><span class="token punctuation">:</span> Zigbee2MQTT <span class="token comment"># The name of the application (Default: Zigbee2MQTT).</span>\n    <span class="token key atrule">eol</span><span class="token punctuation">:</span> <span class="token string">&#39;\\n&#39;</span> <span class="token comment"># The end of line character to be added to the end of the message (Default: Message without modifications).</span>\n  <span class="token comment"># Optional: Baud rate speed for serial port, this can be anything firmware support but default is 115200 for Z-Stack and EZSP, 38400 for Deconz, however note that some EZSP firmware need 57600.</span>\n  <span class="token key atrule">baudrate</span><span class="token punctuation">:</span> <span class="token number">115200</span>\n  <span class="token comment"># Optional: RTS / CTS Hardware Flow Control for serial port (default: false)</span>\n  <span class="token key atrule">rtscts</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n  <span class="token comment"># Optional: soft reset ZNP after timeout (in seconds); 0 is disabled (default: 0)</span>\n  <span class="token key atrule">soft_reset_timeout</span><span class="token punctuation">:</span> <span class="token number">0</span>\n  <span class="token comment"># Optional: network encryption key, will improve security (Note: changing requires repairing of all devices) (default: shown below)</span>\n  <span class="token comment"># Setting network_key: GENERATE will make Zigbee2MQTT generate a new network key on next startup</span>\n  <span class="token key atrule">network_key</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>\n  <span class="token comment"># Optional: Add a last_seen attribute to MQTT messages, contains date/time of last Zigbee message</span>\n  <span class="token comment"># possible values are: disable (default), ISO_8601, ISO_8601_local, epoch (default: disable)</span>\n  <span class="token key atrule">last_seen</span><span class="token punctuation">:</span> <span class="token string">&#39;disable&#39;</span>\n  <span class="token comment"># Optional: Add an elapsed attribute to MQTT messages, contains milliseconds since the previous msg (default: false)</span>\n  <span class="token key atrule">elapsed</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n  <span class="token comment"># Optional: Availability timeout in seconds, disabled by default (0).</span>\n  <span class="token comment"># When enabled, devices will be checked if they are still online.</span>\n  <span class="token comment"># Only AC powered routers are checked for availability. (default: 0)</span>\n  <span class="token key atrule">availability_timeout</span><span class="token punctuation">:</span> <span class="token number">0</span>\n  <span class="token comment"># Optional: Prevent devices from being checked for availability (default: empty)</span>\n  <span class="token comment"># Previously called `availability_blacklist` (which is deprecated)</span>\n  <span class="token key atrule">availability_blocklist</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> DEVICE_FRIENDLY_NAME or DEVICE_IEEE_ADDRESS\n  <span class="token comment"># Optional: Only enable availability check for certain devices (default: empty)</span>\n  <span class="token comment"># Previously called `availability_whitelist` (which is deprecated)</span>\n  <span class="token key atrule">availability_passlist</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> DEVICE_FRIENDLY_NAME or DEVICE_IEEE_ADDRESS\n  <span class="token comment"># Optional: Enables report feature, this feature is DEPRECATED since reporting is now setup by default</span>\n  <span class="token comment"># when binding devices. Docs can still be found here: https://github.com/Koenkk/zigbee2mqtt.io/blob/master/docs/information/report.md</span>\n  <span class="token key atrule">report</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: Home Assistant discovery topic (default: shown below)</span>\n  <span class="token key atrule">homeassistant_discovery_topic</span><span class="token punctuation">:</span> <span class="token string">&#39;homeassistant&#39;</span>\n  <span class="token comment"># Optional: Home Assistant status topic (default: shown below)</span>\n  <span class="token key atrule">homeassistant_status_topic</span><span class="token punctuation">:</span> <span class="token string">&#39;homeassistant/status&#39;</span>\n  <span class="token comment"># Optional: Home Assistant legacy entity attributes, (default: shown below), when enabled:</span>\n  <span class="token comment"># Zigbee2MQTT will send additional states as attributes with each entity. For example,</span>\n  <span class="token comment"># A temperature &amp; humidity sensor will have 2 entities for the temperature and</span>\n  <span class="token comment"># humidity, with this setting enabled both entities will also have</span>\n  <span class="token comment"># an temperature and humidity attribute.</span>\n  <span class="token comment"># Note: Disabling this option, requires a Home Assistant restart</span>\n  <span class="token key atrule">homeassistant_legacy_entity_attributes</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: Home Assistant legacy triggers (default: shown below), when enabled:</span>\n  <span class="token comment"># - Zigbee2mqt will send an empty &#39;action&#39; or &#39;click&#39; after one has been send</span>\n  <span class="token comment"># - A &#39;sensor_action&#39; and &#39;sensor_click&#39; will be discoverd</span>\n  <span class="token key atrule">homeassistant_legacy_triggers</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: log timestamp format (default: shown below)</span>\n  <span class="token key atrule">timestamp_format</span><span class="token punctuation">:</span> <span class="token string">&#39;YYYY-MM-DD HH:mm:ss&#39;</span>\n  <span class="token comment"># Optional: configure adapter concurrency (e.g. 2 for CC2531 or 16 for CC26X2R1) (default: null, uses recommended value)</span>\n  <span class="token key atrule">adapter_concurrent</span><span class="token punctuation">:</span> <span class="token null important">null</span>\n  <span class="token comment"># Optional: disables the legacy api (default: shown below)</span>\n  <span class="token key atrule">legacy_api</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n  <span class="token comment"># Optional: use IKEA TRADFRI OTA test server, see OTA updates documentation (default: false)</span>\n  <span class="token key atrule">ikea_ota_use_test_url</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n\n<span class="token comment"># Optional: experimental options</span>\n<span class="token key atrule">experimental</span><span class="token punctuation">:</span>\n  <span class="token comment"># Optional: MQTT output type: json, attribute or attribute_and_json (default: shown below)</span>\n  <span class="token comment"># Examples when &#39;state&#39; of a device is published</span>\n  <span class="token comment"># json: topic: &#39;zigbee2mqtt/my_bulb&#39; payload &#39;{&quot;state&quot;: &quot;ON&quot;}&#39;</span>\n  <span class="token comment"># attribute: topic &#39;zigbee2mqtt/my_bulb/state&#39; payload &#39;ON&quot;</span>\n  <span class="token comment"># attribute_and_json: both json and attribute (see above)</span>\n  <span class="token key atrule">output</span><span class="token punctuation">:</span> <span class="token string">&#39;json&#39;</span>\n  <span class="token comment"># Optional: Transmit power setting in dBm (default: 5).</span>\n  <span class="token comment"># This will set the transmit power for devices that bring an inbuilt amplifier.</span>\n  <span class="token comment"># It can&#39;t go over the maximum of the respective hardware and might be limited</span>\n  <span class="token comment"># by firmware (for example to migrate heat, or by using an unsupported firmware).</span>\n  <span class="token comment"># For the CC2652R(B) this is 5 dBm, CC2652P/CC1352P-2 20 dBm.</span>\n  <span class="token key atrule">transmit_power</span><span class="token punctuation">:</span> <span class="token number">5</span>\n\n<span class="token comment"># Optional: networkmap options</span>\n<span class="token key atrule">map_options</span><span class="token punctuation">:</span>\n  <span class="token key atrule">graphviz</span><span class="token punctuation">:</span>\n    <span class="token comment"># Optional: Colors to be used in the graphviz network map (default: shown below)</span>\n    <span class="token key atrule">colors</span><span class="token punctuation">:</span>\n      <span class="token key atrule">fill</span><span class="token punctuation">:</span>\n        <span class="token key atrule">enddevice</span><span class="token punctuation">:</span> <span class="token string">&#39;#fff8ce&#39;</span>\n        <span class="token key atrule">coordinator</span><span class="token punctuation">:</span> <span class="token string">&#39;#e04e5d&#39;</span>\n        <span class="token key atrule">router</span><span class="token punctuation">:</span> <span class="token string">&#39;#4ea3e0&#39;</span>\n      <span class="token key atrule">font</span><span class="token punctuation">:</span>\n        <span class="token key atrule">coordinator</span><span class="token punctuation">:</span> <span class="token string">&#39;#ffffff&#39;</span>\n        <span class="token key atrule">router</span><span class="token punctuation">:</span> <span class="token string">&#39;#ffffff&#39;</span>\n        <span class="token key atrule">enddevice</span><span class="token punctuation">:</span> <span class="token string">&#39;#000000&#39;</span>\n      <span class="token key atrule">line</span><span class="token punctuation">:</span>\n        <span class="token key atrule">active</span><span class="token punctuation">:</span> <span class="token string">&#39;#009900&#39;</span>\n        <span class="token key atrule">inactive</span><span class="token punctuation">:</span> <span class="token string">&#39;#994444&#39;</span>\n\n<span class="token comment"># Optional: OTA update settings</span>\n<span class="token comment"># See https://www.zigbee2mqtt.io/guide/usage/ota_updates.html for more info</span>\n<span class="token key atrule">ota</span><span class="token punctuation">:</span>\n    <span class="token comment"># Minimum time between OTA update checks</span>\n    <span class="token key atrule">update_check_interval</span><span class="token punctuation">:</span> <span class="token number">1440</span>\n    <span class="token comment"># Disable automatic update checks</span>\n    <span class="token key atrule">disable_automatic_update_check</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>\n\n<span class="token comment"># Optional: see &#39;Device specific configuration&#39; below</span>\n<span class="token key atrule">device_options</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token comment"># Optional, see &#39;External converters configuration&#39; below</span>\n<span class="token key atrule">external_converters</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br></div></div><h3 id="specifying-devices-and-groups-in-a-separate-file" tabindex="-1"><a class="header-anchor" href="#specifying-devices-and-groups-in-a-separate-file" aria-hidden="true">#</a> Specifying devices and groups in a separate file</h3><p>Normally devices and groups are specified in the <code>configuration.yaml</code>, example:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">devices</span><span class="token punctuation">:</span>\n  <span class="token key atrule">&#39;0x00158d0001d82999&#39;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> <span class="token string">&#39;my_occupancy_sensor&#39;</span>\n\n<span class="token key atrule">groups</span><span class="token punctuation">:</span>\n  <span class="token key atrule">&#39;1&#39;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> group_1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>In case you want to specify devices and groups in a separate file, the following configuration can be used (equivalent of the above example).</p><p><strong>configuration.yaml</strong></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">devices</span><span class="token punctuation">:</span> devices.yaml\n<span class="token key atrule">groups</span><span class="token punctuation">:</span> groups.yaml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>devices.yaml</strong></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">&#39;0x00158d0001d82999&#39;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> <span class="token string">&#39;my_occupancy_sensor&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>groups.yaml</strong></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">&#39;1&#39;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> group_1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>To define devices/groups in multiple files put the following in your <code>configuration.yaml</code>:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">devices</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> devices1.yaml\n  <span class="token punctuation">-</span> devices2.yaml\n<span class="token key atrule">groups</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> groups1.yaml\n  <span class="token punctuation">-</span> groups2.yaml\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Any newly added devices will always be added to the first file (<code>devices1.yaml</code>/<code>groups1.yaml</code> in this example).</p><h3 id="specifying-mqtt-user-password-and-network-key-in-a-different-file" tabindex="-1"><a class="header-anchor" href="#specifying-mqtt-user-password-and-network-key-in-a-different-file" aria-hidden="true">#</a> Specifying MQTT user/password and network_key in a different file</h3><p>To specify the MQTT user/password and network_key in a different file, e.g <code>secret.yaml</code>, use the following configuration.</p><p><strong>configuration.yaml</strong></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token comment"># IMPORTANT: Don&#39;t forget the quotes!</span>\n<span class="token key atrule">mqtt</span><span class="token punctuation">:</span>\n  <span class="token key atrule">user</span><span class="token punctuation">:</span> <span class="token string">&#39;!secret user&#39;</span>\n  <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&#39;!secret password&#39;</span>\n<span class="token key atrule">advanced</span><span class="token punctuation">:</span>\n  <span class="token key atrule">network_key</span><span class="token punctuation">:</span> <span class="token string">&#39;!secret network_key&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>secret.yaml</strong></p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">user</span><span class="token punctuation">:</span> mqtt_user\n<span class="token key atrule">password</span><span class="token punctuation">:</span> mqtt_password\n<span class="token key atrule">network_key</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="device-specific-configuration" tabindex="-1"><a class="header-anchor" href="#device-specific-configuration" aria-hidden="true">#</a> Device specific configuration</h2><p>The <code>configuration.yaml</code> allows to set device specific configuration. This can also be used in combination with groups. The following options are available.</p><h3 id="all-devices" tabindex="-1"><a class="header-anchor" href="#all-devices" aria-hidden="true">#</a> All devices</h3>',25),p=(0,e.uE)("<li><code>friendly_name</code>: Used in the MQTT topic of a device. By default this is the device ID (e.g. <code>0x00128d0001d9e1d2</code>).</li><li><code>retain</code>: Retain MQTT messages of this device (default <code>false</code>).</li><li><code>retention</code>: Sets the MQTT Message Expiry in seconds e.g. <code>retention: 900</code> = 15 minutes (default: not enabled). Make sure to set <code>mqtt.version</code> to <code>5</code> (see <code>mqtt</code> configuration above)</li>",3),l=(0,e._)("code",null,"qos",-1),o=(0,e.Uk)(": QoS level for MQTT messages of this device. "),c={href:"https://www.npmjs.com/package/mqtt#about-qos",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("What is QoS?"),r=(0,e.uE)("<li><code>homeassistant</code>: Allows to override values of the Home Assistant discovery payload. See example below.</li><li><code>debounce</code>: Debounces messages of this device. When setting e.g. <code>debounce: 1</code> and a message from a device is received, Zigbee2MQTT will not immediately publish this message but combine it with other messages received in that same second of that device. This is handy for e.g. the <code>WSDCGQ11LM</code> which publishes humidity, temperature and pressure at the same time but as 3 different messages.</li><li><code>debounce_ignore</code> Protects unique payload values of specified payload properties from overriding within debounce time. When setting e.g. <code>debounce: 1</code> and <code>debounce_ignore: - action</code> every payload with unique <code>action</code> value will be published. This is handy for e.g. the <code>E1744</code> which publishes multiple messages in short time period after one turn and <code>debounce</code> option without <code>debounce_ignore</code> publishes only last payload with action <code>rotate_stop</code>. On the other hand <code>debounce: 1</code> with <code>debounce_ignore: - action</code> will publish all unique action messages, at least two (e.g. <code>action: rotate_left</code> and <code>action: rotate_stop</code>)</li><li><code>retrieve_state</code>: (DEPRECATED) Retrieves the state after setting it. Should only be enabled when the reporting feature does not work for this device.</li><li><code>filtered_attributes</code>: Allows to prevent certain attributes from being published. When a device would e.g. publish <code>{&quot;temperature&quot;: 10, &quot;battery&quot;: 20}</code> and you set <code>filtered_attributes: [&quot;battery&quot;]</code> it will publish <code>{&quot;temperature&quot;: 10}</code>.</li><li><code>optimistic</code>: Publish optimistic state after set, e.g. when a brightness change command succeeds Zigbee2MQTT assumes the brightness of the device changed and will publish this (default <code>true</code>).</li><li><code>filtered_optimistic</code>: Same as the <code>filtered_attributes</code> option but only applies to the optimistic published attributes. Has no effect when <code>optimistic: false</code> is set. Example: <code>filtered_optimistic: [&quot;color_mode&quot;, &quot;color&quot;]</code>.</li>",7),u=(0,e._)("h3",{id:"device-type-specific",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#device-type-specific","aria-hidden":"true"},"#"),(0,e.Uk)(" Device type specific")],-1),m=(0,e.Uk)("Some devices support device type specific configuration, e.g. "),b=(0,e.Uk)("RTCGQ11LM"),k=(0,e.Uk)(". To see if your device has device type specific configuration, visit the device page by going to "),d=(0,e.Uk)("Supported devices"),f=(0,e.Uk)(" and clicking on the model number."),g=(0,e._)("h3",{id:"external-converters-configuration",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#external-converters-configuration","aria-hidden":"true"},"#"),(0,e.Uk)(" External converters configuration")],-1),h=(0,e.Uk)("You can define external converters to e.g. add support for a DiY device. The extension can be a file with "),y=(0,e._)("code",null,".js",-1),v=(0,e.Uk)(" extension in the "),_=(0,e._)("code",null,"data",-1),w=(0,e.Uk)(" directory or a NPM package. Ensure that default export from your external converter exports an array or device object (refer to the definition in the "),T=(0,e._)("code",null,"devices",-1),x=(0,e.Uk)(" folder of zigbee-herdsman-converters). Some examples can be found "),O={href:"https://github.com/Koenkk/zigbee2mqtt.io/tree/master/docs/externalConvertersExample",target:"_blank",rel:"noopener noreferrer"},D=(0,e.Uk)("here"),E=(0,e.Uk)(". For this example put the files in the "),q=(0,e._)("code",null,"data",-1),M=(0,e.Uk)(" folder and add the following to "),A=(0,e._)("code",null,"configuration.yaml",-1),S=(0,e.Uk)(":"),I=(0,e.uE)('<div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">external_converters</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> freepad_ext.js\n  <span class="token punctuation">-</span> one<span class="token punctuation">-</span>more<span class="token punctuation">-</span>converter.js\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',1),Q=(0,e.Uk)("See also "),C=(0,e.Uk)("How to support new devices"),R=(0,e.Uk)("."),Z=(0,e.uE)('<h4 id="changing-device-type-specific-defaults" tabindex="-1"><a class="header-anchor" href="#changing-device-type-specific-defaults" aria-hidden="true">#</a> Changing device type specific defaults</h4><p>The default values used for the device specific configuration can be overriden via e.g.:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">device_options</span><span class="token punctuation">:</span>\n  <span class="token key atrule">occupancy_timeout</span><span class="token punctuation">:</span> <span class="token number">130</span>\n  <span class="token key atrule">temperature_precision</span><span class="token punctuation">:</span> <span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">devices</span><span class="token punctuation">:</span>\n  <span class="token key atrule">&#39;0x00158d0001d82999&#39;</span><span class="token punctuation">:</span>\n    <span class="token key atrule">friendly_name</span><span class="token punctuation">:</span> <span class="token string">&#39;my_occupancy_sensor&#39;</span>\n    <span class="token key atrule">retain</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n    <span class="token key atrule">qos</span><span class="token punctuation">:</span> <span class="token number">1</span>\n    <span class="token key atrule">debounce</span><span class="token punctuation">:</span> <span class="token number">0.5</span>\n    <span class="token key atrule">debounce_ignore</span><span class="token punctuation">:</span>\n      <span class="token punctuation">-</span> action\n      <span class="token punctuation">-</span> brightness\n    <span class="token comment"># Set `homeassistant: null` to skip discovery for this device</span>\n    <span class="token key atrule">homeassistant</span><span class="token punctuation">:</span>\n      <span class="token comment"># Applied to all discovered entities.</span>\n      <span class="token key atrule">expire_after</span><span class="token punctuation">:</span> <span class="token number">30</span>\n      <span class="token comment"># Only applied to discovered temperature sensor.</span>\n      <span class="token key atrule">temperature</span><span class="token punctuation">:</span>\n        <span class="token key atrule">icon</span><span class="token punctuation">:</span> mdi<span class="token punctuation">:</span>oil<span class="token punctuation">-</span>temperature\n        <span class="token comment"># Omit values by setting them to null, e.g. don&#39;t send device_class</span>\n        <span class="token key atrule">device_class</span><span class="token punctuation">:</span> <span class="token null important">null</span>\n    <span class="token comment"># Device type specific examples</span>\n    <span class="token key atrule">occupancy_timeout</span><span class="token punctuation">:</span> <span class="token number">120</span>\n    <span class="token key atrule">no_occupancy_since</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="different-location" tabindex="-1"><a class="header-anchor" href="#different-location" aria-hidden="true">#</a> Different location</h2><p>To specify a different data directory (by default <code>data</code>), set the <code>ZIGBEE2MQTT_DATA</code> environment variable. The value of <code>ZIGBEE2MQTT_DATA</code> should be a path to a directory e.g. <code>/tmp/z2m_data</code>, this directory should at least contain a <code>configuration.yaml</code>.</p><h2 id="override-via-environment-variables" tabindex="-1"><a class="header-anchor" href="#override-via-environment-variables" aria-hidden="true">#</a> Override via environment variables</h2><p>It is possible to override the values in <code>configuration.yaml</code> via environment variables. The name of the environment variable should start with <code>ZIGBEE2MQTT_CONFIG_</code> followed by the path to the property you want to set in uppercase split by a <code>_</code>.</p><p>In case you want to for example override:</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">mqtt</span><span class="token punctuation">:</span>\n  <span class="token key atrule">base_topic</span><span class="token punctuation">:</span> zigbee2mqtt\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>set <code>ZIGBEE2MQTT_CONFIG_MQTT_BASE_TOPIC</code> to the desired value.</p>',12),L={},P=(0,a(83744).Z)(L,[["render",function(n,s){const a=(0,e.up)("OutboundLink"),L=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("ul",null,[p,(0,e._)("li",null,[l,o,(0,e._)("a",c,[i,(0,e.Wm)(a)])]),r]),u,(0,e._)("p",null,[m,(0,e.Wm)(L,{to:"/devices/RTCGQ11LM.html"},{default:(0,e.w5)((()=>[b])),_:1}),k,(0,e.Wm)(L,{to:"/supported-devices/"},{default:(0,e.w5)((()=>[d])),_:1}),f]),g,(0,e._)("p",null,[h,y,v,_,w,T,x,(0,e._)("a",O,[D,(0,e.Wm)(a)]),E,q,M,A,S]),I,(0,e._)("p",null,[Q,(0,e.Wm)(L,{to:"/how-to/support_new_devices.html"},{default:(0,e.w5)((()=>[C])),_:1}),R]),Z],64)}]])},83744:(n,s)=>{s.Z=(n,s)=>{for(const[a,e]of s)n[a]=e;return n}}}]);