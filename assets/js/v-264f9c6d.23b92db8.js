"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[38129],{15797:(t,e,o)=>{o.r(e),o.d(e,{data:()=>a});const a={key:"v-264f9c6d",path:"/devices/SR600.html",title:"Salus Controls SR600 control via MQTT",lang:"en-US",frontmatter:{title:"Salus Controls SR600 control via MQTT",description:"Integrate your Salus Controls SR600 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendors bridge or gateway."},excerpt:"",headers:[{level:2,title:"Notes",slug:"notes",children:[]},{level:2,title:"OTA updates",slug:"ota-updates",children:[]},{level:2,title:"Exposes",slug:"exposes",children:[{level:3,title:"Switch",slug:"switch",children:[]},{level:3,title:"Linkquality (numeric)",slug:"linkquality-numeric",children:[]}]}],filePathRelative:"devices/SR600.md"}},55688:(t,e,o)=>{o.r(e),o.d(e,{default:()=>h});var a=o(66252);const s=(0,a.uE)('<h1 id="salus-controls-sr600" tabindex="-1"><a class="header-anchor" href="#salus-controls-sr600" aria-hidden="true">#</a> Salus Controls SR600</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Model</td><td>SR600</td></tr><tr><td>Vendor</td><td>Salus Controls</td></tr><tr><td>Description</td><td>Relay switch</td></tr><tr><td>Exposes</td><td>switch (state), linkquality</td></tr><tr><td>Picture</td><td><img src="https://psi-4ward.github.io/zigbee2mqtt-docs/images/devices/SR600.jpg" alt="Salus Controls SR600"></td></tr></tbody></table><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><p>None</p><h2 id="ota-updates" tabindex="-1"><a class="header-anchor" href="#ota-updates" aria-hidden="true">#</a> OTA updates</h2>',5),i=(0,a.Uk)("This device supports OTA updates, for more information see "),d=(0,a.Uk)("OTA updates"),r=(0,a.Uk)("."),l=(0,a.uE)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes" aria-hidden="true">#</a> Exposes</h2><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> Switch</h3><p>The current state of this switch is in the published state under the <code>state</code> property (value is <code>ON</code> or <code>OFF</code>). To control this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;state&quot;: &quot;ON&quot;}</code>, <code>{&quot;state&quot;: &quot;OFF&quot;}</code> or <code>{&quot;state&quot;: &quot;TOGGLE&quot;}</code>. To read the current state of this switch publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;state&quot;: &quot;&quot;}</code>.</p><h3 id="linkquality-numeric" tabindex="-1"><a class="header-anchor" href="#linkquality-numeric" aria-hidden="true">#</a> Linkquality (numeric)</h3><p>Link quality (signal strength). Value can be found in the published state on the <code>linkquality</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>255</code>. The unit of this value is <code>lqi</code>.</p>',5),u={},h=(0,o(83744).Z)(u,[["render",function(t,e){const o=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[s,(0,a._)("p",null,[i,(0,a.Wm)(o,{to:"/information/ota_updates.html"},{default:(0,a.w5)((()=>[d])),_:1}),r]),l],64)}]])},83744:(t,e)=>{e.Z=(t,e)=>{for(const[o,a]of e)t[o]=a;return t}}}]);